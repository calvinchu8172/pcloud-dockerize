version: '3'
services:
  db:
    image: mysql:5.7
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file: .env
    volumes:
      - /opt/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
  redis:
    image: redis
    container_name: redis
    restart: always
    volumes:
      - ./redis/data:/data
    ports:
      - "6379:6379"
  sso:
    # build:
    #   context: .
    #   dockerfile: ./pcloud-sso/Dockerfile
    image: calvinchu/pcloud-sso-dockerize
    container_name: sso
    command: bash -c "rm -f tmp/pids/server.pid && dockerize -wait tcp://db:3306 -timeout 1m && bundle exec unicorn -p 3000 -c config/unicorn/production.rb"
    env_file: .env
    volumes:
      - ./pcloud-sso:/home/app/rails-app
      - /tmp/unicorn:/tmp/unicorn
    restart: on-failure
    depends_on:
      - db
      - redis
      - nginx
  portal:
    # build:
    #   context: .
    #   dockerfile: ./pcloud-portal/Dockerfile
    image: calvinchu/pcloud-portal-dockerize
    container_name: portal
    command: bash -c "rm -f tmp/pids/server.pid && dockerize -wait tcp://db:3306 -timeout 1m && bundle exec unicorn -p 3000 -c config/unicorn/production.rb"
    env_file: .env
    volumes:
      - ./pcloud-portal:/home/app/rails-app
      - /tmp/unicorn:/tmp/unicorn
    restart: on-failure
    depends_on:
      - db
      - redis
      - nginx
      - bots
  dureading:
    # build:
    #   context: .
    #   dockerfile: ./dureading/Dockerfile
    image: calvinchu/dureading-dockerize
    container_name: dureading
    command: bash -c "rm -f tmp/pids/server.pid unicorn.pid && dockerize -wait tcp://db:3306 -timeout 1m && bundle exec unicorn -p 3000 -c config/unicorn/production.rb"
    env_file: .env
    volumes:
      - ./dureading:/home/app/rails-app
      - /tmp/unicorn:/tmp/unicorn
    restart: on-failure
    depends_on:
      - db
      - nginx
  bots:
    # build:
    #   context: .
    #   dockerfile: ./pcloud-bots/Dockerfile
    image: calvinchu/pcloud-bots-dockerize
    container_name: bots
    command: bash -c "dockerize -wait tcp://db:3306 -wait tcp://mongooseim:5222 -timeout 1m && sh ./start.sh"
    env_file: .env
    volumes:
      - ./pcloud-bots:/home/app/rails-app
    restart: on-failure
    depends_on:
      - db
      - redis
      - mongooseim    
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile_prod
    # image: calvinchu/pcloud-nginx-dockerize
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /tmp/unicorn:/tmp/unicorn
      - /etc/letsencrypt:/etc/letsencrypt
    restart: always
    env_file: .env
  mongooseim:
    # build:
    #   context: .
    #   dockerfile: ./mongooseim/Dockerfile
    image: calvinchu/pcloud-mongooseim-dockerize
    container_name: mongooseim
    env_file: .env
    volumes:
      - ./mongooseim/log:/data/log
      - ./mongooseim/mnesia:/data/mnesia
    ports:
      - 5222:5222
      - 5280:5280
      - 5269:5269
      - 4369:4369
      - 9100:9100
    depends_on:
      - db
      - redis

